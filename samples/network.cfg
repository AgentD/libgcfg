# A semi-practical example from a network emulator

# Node classifies a generic network device
node "client0" {
	# This adds a named interface to the node and demonstrates nesting
	port "eth0" {
		ipv4 192.168.1.2/24
		outlimit 100kbit
	}

	defaultgw 192.168.1.1
}

# Another network device which does NAT routing
node "router0" {
	# Less than two interfaces would be boring for a router
	port "eth0" {
		ipv4 192.168.1.1/24
		connect "client0.eth0"
		outlimit 1mbit
	}
	port "eth1" {
		ipv4 172.16.20.19/16
	}

	# Enable forwarding, configure conntrack and NAT masquerading for
	# forwarded traffic. Port "eth1" is the masqueraded, public facing.
	forwarding on
	nat "eth1"
}

# The same again with a second client and a second router
node "client1" {
	port "eth0" {
		ipv4 192.168.0.2/24
		outlimit 300kbit
	}

	defaultgw 192.168.0.1
}

node "router1" {
	port "eth0" {
		ipv4 192.168.0.1/24
		outlimit 2mbit
		connect "client1.eth0"
	}
	port "eth1" {
		ipv4 172.16.35.12/16
	}

	forwarding on
	nat "eth1"
}

# Setup a web server on the same network as the two routers share publically
node "websrv" {
	port "eth0" {
		ipv4 172.16.30.16/16
	}
}

# connect the routers and the web server
switch {
	port "router0.eth1"
	port "router1.eth1"
	port "websrv.eth0"
}
